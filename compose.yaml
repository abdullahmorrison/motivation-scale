services:
  website:
    build: ./website
    ports:
      - 3000:3000
    volumes:
      - type: bind
        source: ./website
        target: /app
      - type: volume # Preserve node_modules
        source: node_modules
        target: /app/node_modules
    environment:
      NEXT_PUBLIC_SERVER_URL: ${NEXT_PUBLIC_SERVER_URL}
      CHOKIDAR_USEPOLLING: "true"  # Enable file watching in Docker
      WATCHPACK_POLLING: "true"
    depends_on:
      - server
    networks:
      - app_network
    profiles: ["web"]

  mobile:
    build: ./mobile
    ports:
      - 3001:3001
    environment:
      EXPO_PUBLIC_SERVER_URL: ${EXPO_PUBLIC_SERVER_URL}
    depends_on:
      - server
    networks:
      - app_network
    profiles: ["mobile"]

  server:
    build: ./server
    ports:
      - 3002:3002
    environment:
      DB_NAME: motivation_scale_data
      DB_CONNECTION: mongodb://db:27017
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

  db:
    image: mongodb/mongodb-community-server:6.0-ubi8
    ports:
      - 27017:27017
    volumes:
      - type: volume
        source: db_data
        target: /data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

volumes:
  db_data:
  node_modules: # website's node_modules

networks:
  app_network:
    driver: bridge
